# Generated by Django 5.2.5 on 2025-09-17 05:07

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('am_module', '0006_rename_exit_date_blendedoutcomemodel_expected_exit_date_and_more'),
        ('core', '0003_legalcrm'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AMMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this record was last updated (any field).')),
                ('asset', models.ForeignKey(blank=True, help_text='Optional asset this data belongs to (NULL for global entries).', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ammetrics', to='am_module.sellerboardeddata')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this record (if known).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_ammetrics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AM Data',
                'verbose_name_plural': 'AM Data',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='AMMetricsChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(help_text='Field name that was updated.', max_length=64)),
                ('old_value', models.TextField(blank=True, help_text='Previous value (as text/JSON).', null=True)),
                ('new_value', models.TextField(blank=True, help_text='New value (as text/JSON).', null=True)),
                ('changed_at', models.DateTimeField(auto_now_add=True, help_text='When the change occurred.')),
                ('changed_by', models.ForeignKey(blank=True, help_text='User who made the change (if known).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ammetrics_changes', to=settings.AUTH_USER_MODEL)),
                ('record', models.ForeignKey(help_text='The metrics record this change belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='changes', to='am_module.ammetrics')),
            ],
            options={
                'ordering': ['-changed_at', '-id'],
            },
        ),
        migrations.CreateModel(
            name='AMNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(help_text='Free-form note text for this asset.')),
                ('pinned', models.BooleanField(default=False, help_text='Pin this note for prominence in UI.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this note was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this note was last updated.')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this note (if known).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_am_notes', to=settings.AUTH_USER_MODEL)),
                ('seller_boarded_data', models.ForeignKey(help_text='The SellerBoardedData this note belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='am_notes', to='am_module.sellerboardeddata')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this note (if known).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_am_notes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-pinned', '-updated_at', '-id'],
            },
        ),
        migrations.CreateModel(
            name='FCSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fc_sale_sched_date', models.DateField(blank=True, help_text='Scheduled date of the foreclosure sale (optional).', null=True)),
                ('fc_sale_actual_date', models.DateField(blank=True, help_text='Actual date of the foreclosure sale (optional).', null=True)),
                ('fc_bid_price', models.DecimalField(blank=True, decimal_places=2, help_text='Bid price of the foreclosure sale (optional).', max_digits=10, null=True)),
                ('fc_sale_price', models.DecimalField(blank=True, decimal_places=2, help_text='Sale price of the foreclosure sale (optional).', max_digits=10, null=True)),
                ('asset', models.OneToOneField(help_text='The boarded asset this foreclosure sale belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='fc_sale', to='am_module.sellerboardeddata')),
                ('legal_crm', models.ForeignKey(blank=True, help_text='Legal entity/contact from CRM associated with this foreclosure sale (optional).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fc_sales', to='core.legalcrm')),
            ],
        ),
        migrations.CreateModel(
            name='REOData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('list_price', models.DecimalField(blank=True, decimal_places=2, help_text='List price of the REO property (optional).', max_digits=10, null=True)),
                ('list_date', models.DateField(blank=True, help_text='Date the property was listed (optional).', null=True)),
                ('under_contract_flag', models.BooleanField(default=False, help_text='Whether the property is under contract (optional).')),
                ('under_contract_date', models.DateField(blank=True, help_text='Date the property went under contract (optional).', null=True)),
                ('contract_price', models.DecimalField(blank=True, decimal_places=2, help_text='Contract price of the REO property (optional).', max_digits=10, null=True)),
                ('estimated_close_date', models.DateField(blank=True, help_text='Estimated close date of the REO property (optional).', null=True)),
                ('actual_close_date', models.DateField(blank=True, help_text='Actual close date of the REO property (optional).', null=True)),
                ('seller_credit_amt', models.DecimalField(blank=True, decimal_places=2, help_text='Seller credit amount (optional).', max_digits=10, null=True)),
                ('purchase_type', models.CharField(blank=True, choices=[('cash', 'Cash'), ('financing', 'Financing'), ('seller_financing', 'Seller Financing')], help_text='How the property was purchased (Cash, Financing, Seller Financing).', max_length=32, null=True)),
                ('gross_purchase_price', models.DecimalField(blank=True, decimal_places=2, help_text='Gross purchase price of the REO property (optional).', max_digits=10, null=True)),
                ('asset', models.OneToOneField(help_text='The boarded asset this REO data belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='reo_data', to='am_module.sellerboardeddata')),
                ('broker_crm', models.OneToOneField(blank=True, help_text='Linked Broker CRM contact for this REO asset (optional).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reo_record', to='core.brokercrm')),
            ],
        ),
        migrations.AddIndex(
            model_name='ammetrics',
            index=models.Index(fields=['asset'], name='am_module_a_asset_i_70cfbb_idx'),
        ),
        migrations.AddIndex(
            model_name='ammetricschange',
            index=models.Index(fields=['record', 'changed_at'], name='am_module_a_record__db193f_idx'),
        ),
        migrations.AddIndex(
            model_name='ammetricschange',
            index=models.Index(fields=['field_name', 'changed_at'], name='am_module_a_field_n_3e7084_idx'),
        ),
        migrations.AddIndex(
            model_name='amnote',
            index=models.Index(fields=['seller_boarded_data', 'pinned', 'updated_at'], name='am_module_a_seller__8b0310_idx'),
        ),
    ]
