# Generated by Django 5.2.5 on 2025-09-22 16:42

import core.models.attachments
import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('acq_module', '0001_initial'),
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DebtFacility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facility_name', models.CharField(max_length=255)),
                ('firm_name', models.CharField(max_length=255)),
                ('firm_email', models.EmailField(max_length=254, null=True)),
                ('firm_phone', models.CharField(max_length=255, null=True)),
                ('commitment_size', models.DecimalField(decimal_places=2, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('rate_index', models.CharField(default='SOFR', max_length=16, null=True)),
                ('sofr_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('spread_bps', models.PositiveIntegerField(null=True)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Debt Facility',
                'verbose_name_plural': 'Debt Facilities',
                'db_table': 'debt_facility',
                'ordering': ['-created_at'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='JVEquityPartner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jv_name', models.CharField(max_length=255)),
                ('partner_firm_name', models.CharField(max_length=255)),
                ('partner_firm_email', models.EmailField(max_length=254, null=True)),
                ('partner_firm_phone', models.CharField(max_length=255, null=True)),
                ('commitment_size', models.DecimalField(decimal_places=2, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('lp_percentage', models.PositiveIntegerField(null=True)),
                ('gp_percentage', models.PositiveIntegerField(null=True)),
                ('lp_promote', models.PositiveIntegerField(null=True)),
                ('gp_promote', models.PositiveIntegerField(null=True)),
                ('lp_contribution_paydown', models.DecimalField(decimal_places=2, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('gp_contribution_paydown', models.DecimalField(decimal_places=2, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('lp_pref', models.DecimalField(decimal_places=2, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('am_fees', models.DecimalField(decimal_places=2, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('acq_fees', models.DecimalField(decimal_places=2, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('fund_start_date', models.DateField(null=True)),
                ('fund_maturity_date', models.DateField(null=True)),
            ],
            options={
                'verbose_name': 'Equity Partner',
                'verbose_name_plural': 'Equity Partners',
                'db_table': 'equity_partner',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AssetIdHub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sellertape_id', models.CharField(blank=True, db_index=True, max_length=64, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Asset ID Hub',
                'verbose_name_plural': 'Asset ID Hub',
                'db_table': 'core_assetidhub',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['sellertape_id'], name='core_asseti_sellert_86d816_idx')],
            },
        ),
        migrations.CreateModel(
            name='BrokerValues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('broker_asis_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('broker_arv_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('broker_value_date', models.DateField(blank=True, null=True)),
                ('broker_rehab_est', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('broker_notes', models.TextField(blank=True, null=True)),
                ('broker_links', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset_hub', models.OneToOneField(blank=True, help_text='TEMP: nullable during staged migration; will be PK in next migration.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='broker_values', to='core.assetidhub')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this broker valuation record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_broker_valuations', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this broker valuation record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_broker_valuations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Broker Values',
                'verbose_name_plural': 'Broker Values',
                'db_table': 'acq_broker_values',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InternalValuation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_asis_value', models.DecimalField(decimal_places=2, max_digits=15)),
                ('internal_arv_value', models.DecimalField(decimal_places=2, max_digits=15)),
                ('internal_value_date', models.DateField()),
                ('internal_rehab_est_total', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('roof_est', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('kitchen_est', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('bath_est', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('flooring_est', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('windows_est', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('appliances_est', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('plumbing_est', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('electrical_est', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('landscaping_est', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('thirdparty_asis_value', models.DecimalField(decimal_places=2, max_digits=15)),
                ('thirdparty_arv_value', models.DecimalField(decimal_places=2, max_digits=15)),
                ('thirdparty_value_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset_hub', models.ForeignKey(blank=True, help_text='Link to hub; many valuations over asset life are supported.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='internal_valuations', to='core.assetidhub')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this valuation record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_internal_valuations', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this valuation record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_internal_valuations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Internal Valuation',
                'verbose_name_plural': 'Internal Valuations',
                'db_table': 'acq_internal_valuation',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MasterCRM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firm', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=2, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('tag', models.CharField(blank=True, choices=[('broker', 'Broker'), ('trading_partner', 'Trading Partner'), ('legal', 'Legal')], db_index=True, help_text='Simple type tag for this contact (Broker, Trading Partner, Legal).', max_length=32, null=True)),
                ('alt_contact_name', models.CharField(blank=True, max_length=255, null=True)),
                ('alt_contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('alt_contact_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('nda_flag', models.BooleanField(default=False)),
                ('nda_signed', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Master CRM',
                'verbose_name_plural': 'Master CRM',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['state'], name='core_master_state_717dd6_idx'), models.Index(fields=['email'], name='core_master_email_80f2ad_idx'), models.Index(fields=['firm'], name='core_master_firm_d00762_idx'), models.Index(fields=['tag'], name='core_master_tag_981fef_idx')],
            },
        ),
        migrations.CreateModel(
            name='Servicer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('servicer_name', models.CharField(max_length=100, unique=True)),
                ('contact_name', models.CharField(max_length=100)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(max_length=20)),
                ('servicing_transfer_duration', models.IntegerField()),
                ('board_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('current_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('thirtday_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sixtyday_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ninetyday_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('onetwentyday_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fc_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('bk_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('mod_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('dil_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('thirdparty_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reo_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reo_days', models.IntegerField()),
                ('liqfee_pct', models.DecimalField(decimal_places=2, max_digits=10)),
                ('liqfee_flat', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Servicer',
                'verbose_name_plural': 'Servicers',
                'db_table': 'servicers',
                'ordering': ['servicer_name'],
                'indexes': [models.Index(fields=['servicer_name'], name='servicers_service_f132f6_idx')],
            },
        ),
        migrations.CreateModel(
            name='StateReference',
            fields=[
                ('state_code', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('state_name', models.CharField(max_length=50)),
                ('judicialvsnonjudicial', models.BooleanField(default=False, help_text='Is this a judicial foreclosure state')),
                ('fc_state_months', models.IntegerField(help_text='Average months to complete foreclosure')),
                ('eviction_duration', models.IntegerField(help_text='Average months to complete eviction')),
                ('rehab_duration', models.IntegerField(help_text='Average months to complete rehab')),
                ('reo_marketing_duration', models.IntegerField(help_text='Average months to complete reo marketing')),
                ('reo_local_market_ext_duration', models.IntegerField(help_text='Average months to complete reo local market extension')),
                ('dil_duration_avg', models.IntegerField(help_text='Average months to complete dilution')),
                ('property_tax_rate', models.DecimalField(decimal_places=4, help_text='Average property tax rate', max_digits=5)),
                ('transfer_tax_rate', models.DecimalField(decimal_places=4, help_text='Tax rate for property transfers', max_digits=5)),
                ('insurance_rate_avg', models.DecimalField(decimal_places=4, help_text='Average insurance rate', max_digits=5)),
                ('fc_legal_fees_avg', models.DecimalField(decimal_places=2, help_text='Average legal fees for foreclosure', max_digits=10)),
                ('dil_cost_avg', models.DecimalField(decimal_places=2, help_text='Average dilution cost', max_digits=10)),
                ('cfk_cost_avg', models.DecimalField(decimal_places=2, help_text='Average CFK cost', max_digits=10)),
                ('value_adjustment_annual', models.DecimalField(decimal_places=4, help_text='Average value adjustment', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'State Reference',
                'verbose_name_plural': 'State References',
                'db_table': 'state_reference',
                'ordering': ['state_name'],
                'indexes': [models.Index(fields=['state_code'], name='state_refer_state_c_df5719_idx')],
            },
        ),
        migrations.CreateModel(
            name='Valuation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(choices=[('internalInitialUW', 'Internal Initial UW Valuation'), ('internal', 'Internal Valuation'), ('broker', 'Broker Valuation'), ('desktop', 'Desktop Valuation'), ('BPOI', 'BPOI'), ('BPOE', 'BPOE'), ('seller', 'Seller Provided'), ('appraisal', 'Professional Appraisal')], help_text='Source of this valuation.', max_length=20)),
                ('asis_value', models.DecimalField(blank=True, decimal_places=2, help_text='As-is value of the property.', max_digits=15, null=True)),
                ('arv_value', models.DecimalField(blank=True, decimal_places=2, help_text='After-repair value of the property.', max_digits=15, null=True)),
                ('value_date', models.DateField(blank=True, help_text='Date of the valuation.', null=True)),
                ('rehab_est_total', models.DecimalField(blank=True, decimal_places=2, help_text='Total estimated rehabilitation costs.', max_digits=15, null=True)),
                ('roof_est', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('kitchen_est', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('bath_est', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('flooring_est', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('windows_est', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('appliances_est', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('plumbing_est', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('electrical_est', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('landscaping_est', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('notes', models.TextField(blank=True, help_text='Notes about the valuation.', null=True)),
                ('links', models.URLField(blank=True, help_text='Links to supporting documentation or external resources.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset_hub', models.ForeignKey(blank=True, help_text='Link to hub; multiple valuations per asset are supported.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='valuations', to='core.assetidhub')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this valuation record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_valuations', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this valuation record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_valuations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Valuation',
                'verbose_name_plural': 'Valuations',
                'db_table': 'acq_valuations',
                'ordering': ['-value_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_raw_id', models.IntegerField(blank=True, db_index=True, help_text='Snapshot of SellerRawData.id', null=True)),
                ('image', models.ImageField(help_text='Uploaded image file.', upload_to=core.models.attachments.get_photo_path)),
                ('source_tag', models.CharField(choices=[('broker', 'Broker'), ('document', 'Document'), ('public', 'Public'), ('internal', 'Internal')], help_text='Origin tag for the photo.', max_length=20)),
                ('caption', models.CharField(blank=True, max_length=255, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('source_document_name', models.CharField(blank=True, max_length=255, null=True)),
                ('source_document_type', models.CharField(blank=True, max_length=20, null=True)),
                ('page_number', models.IntegerField(blank=True, null=True)),
                ('bbox', models.JSONField(blank=True, null=True)),
                ('extraction_confidence', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('source_tool', models.CharField(blank=True, max_length=100, null=True)),
                ('source_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('asset_hub', models.ForeignKey(blank=True, help_text='Stable hub ID for this photo.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='asset_photos', to='core.assetidhub')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who created this photo.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_photos', to=settings.AUTH_USER_MODEL)),
                ('valuation', models.ForeignKey(blank=True, help_text='Valuation this photo is associated with.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='photos', to='core.valuation')),
            ],
            options={
                'verbose_name': 'Photo',
                'verbose_name_plural': 'Photos',
                'db_table': 'acq_photo',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_raw_id', models.IntegerField(blank=True, db_index=True, help_text='Snapshot of SellerRawData.id', null=True)),
                ('file', models.FileField(upload_to=core.models.attachments.get_document_path)),
                ('original_name', models.CharField(blank=True, max_length=255, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('asset_hub', models.ForeignKey(blank=True, help_text='Stable hub ID this document belongs to.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documents', to='core.assetidhub')),
                ('created_by', models.ForeignKey(blank=True, help_text='User who uploaded this document.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_documents', to=settings.AUTH_USER_MODEL)),
                ('valuation', models.ForeignKey(blank=True, help_text='Valuation this document is associated with.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documents', to='core.valuation')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'db_table': 'acq_broker_document',
                'ordering': ['uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='LlDataEnrichment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geocode_lat', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('geocode_lng', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('geocode_used_address', models.CharField(blank=True, max_length=255, null=True)),
                ('geocode_full_address', models.CharField(blank=True, max_length=255, null=True)),
                ('geocode_display_address', models.CharField(blank=True, max_length=255, null=True)),
                ('geocoded_at', models.DateTimeField(blank=True, null=True)),
                ('geocode_county', models.CharField(blank=True, max_length=255, null=True)),
                ('geocode_msa', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset_hub', models.OneToOneField(blank=True, help_text='1:1 hub link for this enrichment (mirror of seller_raw_data.asset_hub).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='enrichment', to='core.assetidhub')),
                ('seller_raw_data', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='enrichment', to='acq_module.sellerrawdata')),
            ],
            options={
                'verbose_name': 'Loan Level Data Enrichment',
                'verbose_name_plural': 'Loan Level Data Enrichments',
                'db_table': 'acq_ll_data_enrichment',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['seller_raw_data'], name='acq_ll_data_seller__cbb3b3_idx'), models.Index(fields=['geocode_lat', 'geocode_lng'], name='acq_ll_data_geocode_476637_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='valuation',
            index=models.Index(fields=['asset_hub'], name='acq_valuati_asset_h_d542f4_idx'),
        ),
        migrations.AddIndex(
            model_name='valuation',
            index=models.Index(fields=['source'], name='acq_valuati_source_9b9a42_idx'),
        ),
        migrations.AddIndex(
            model_name='valuation',
            index=models.Index(fields=['value_date'], name='acq_valuati_value_d_510409_idx'),
        ),
        migrations.AddConstraint(
            model_name='valuation',
            constraint=models.UniqueConstraint(fields=('asset_hub', 'source', 'value_date'), name='unique_valuation_per_source_date'),
        ),
        migrations.AddIndex(
            model_name='photo',
            index=models.Index(fields=['asset_hub'], name='acq_photo_asset_h_ef4ee0_idx'),
        ),
        migrations.AddIndex(
            model_name='photo',
            index=models.Index(fields=['source_tag'], name='acq_photo_source__ceca6b_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['asset_hub'], name='acq_broker__asset_h_7339f5_idx'),
        ),
    ]
