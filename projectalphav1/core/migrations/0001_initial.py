# Generated by Django 5.2.5 on 2025-09-16 22:04

import django.core.validators
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DebtFacility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facility_name', models.CharField(max_length=255)),
                ('firm_name', models.CharField(max_length=255)),
                ('firm_email', models.EmailField(max_length=254, null=True)),
                ('firm_phone', models.CharField(max_length=255, null=True)),
                ('commitment_size', models.DecimalField(decimal_places=2, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('rate_index', models.CharField(default='SOFR', max_length=16, null=True)),
                ('sofr_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('spread_bps', models.PositiveIntegerField(null=True)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Debt Facility',
                'verbose_name_plural': 'Debt Facilities',
                'db_table': 'debt_facility',
                'ordering': ['-created_at'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='JVEquityPartner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jv_name', models.CharField(max_length=255)),
                ('partner_firm_name', models.CharField(max_length=255)),
                ('partner_firm_email', models.EmailField(max_length=254, null=True)),
                ('partner_firm_phone', models.CharField(max_length=255, null=True)),
                ('commitment_size', models.DecimalField(decimal_places=2, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('lp_percentage', models.PositiveIntegerField(null=True)),
                ('gp_percentage', models.PositiveIntegerField(null=True)),
                ('lp_promote', models.PositiveIntegerField(null=True)),
                ('gp_promote', models.PositiveIntegerField(null=True)),
                ('lp_contribution_paydown', models.DecimalField(decimal_places=2, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('gp_contribution_paydown', models.DecimalField(decimal_places=2, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('lp_pref', models.DecimalField(decimal_places=2, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('am_fees', models.DecimalField(decimal_places=2, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('acq_fees', models.DecimalField(decimal_places=2, max_digits=18, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('fund_start_date', models.DateField(null=True)),
                ('fund_maturity_date', models.DateField(null=True)),
            ],
            options={
                'verbose_name': 'Equity Partner',
                'verbose_name_plural': 'Equity Partners',
                'db_table': 'equity_partner',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Brokercrm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('broker_firm', models.CharField(blank=True, max_length=255, null=True)),
                ('broker_state', models.CharField(blank=True, max_length=2, null=True)),
                ('broker_city', models.CharField(blank=True, max_length=255, null=True)),
                ('broker_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('broker_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('broker_name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Broker',
                'verbose_name_plural': 'Brokers',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['broker_state'], name='core_broker_broker__f9180f_idx'), models.Index(fields=['broker_email'], name='core_broker_broker__b82b1c_idx')],
            },
        ),
        migrations.CreateModel(
            name='TradingPartnerCRM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firm', models.CharField(help_text='Firm or organization name for the trading partner.', max_length=255)),
                ('name', models.CharField(blank=True, help_text="Primary contact person's full name.", max_length=255, null=True)),
                ('email', models.EmailField(blank=True, help_text='Primary contact email address.', max_length=254, null=True)),
                ('phone', models.CharField(blank=True, help_text='Primary contact phone number (free-form, include country code if applicable).', max_length=255, null=True)),
                ('altname', models.CharField(blank=True, help_text="Alternate contact person's full name.", max_length=255, null=True)),
                ('altemail', models.EmailField(blank=True, help_text='Alternate contact email address.', max_length=254, null=True)),
                ('alt_phone', models.CharField(blank=True, help_text='Alternate contact phone number.', max_length=255, null=True)),
                ('nda_flag', models.BooleanField(default=False, help_text='Whether an NDA is required/expected with this partner.')),
                ('nda_signed', models.DateField(blank=True, help_text='Date the NDA was fully executed (leave blank if not signed).', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Trading Partner',
                'verbose_name_plural': 'Trading Partners',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['email'], name='core_tradin_email_bd1418_idx'), models.Index(fields=['firm'], name='core_tradin_firm_e6a5a8_idx')],
            },
        ),
    ]
