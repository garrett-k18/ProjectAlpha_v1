# Generated by Django 5.2 on 2025-10-31 05:14

from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0036_statereference_landscaping_avg_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='PropertyTypeAssumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_type', models.CharField(choices=[('SFR', 'SFR'), ('Manufactured', 'Manufactured'), ('Condo', 'Condo'), ('Townhouse', 'Townhouse'), ('2-4 Family', '2-4 Family'), ('Land', 'Land'), ('Multifamily 5+', 'Multifamily 5+'), ('Industrial', 'Industrial'), ('Mixed Use', 'Mixed Use'), ('Storage', 'Storage'), ('Healthcare', 'Healthcare')], help_text='Property type for these assumptions', max_length=20, unique=True)),
                ('utility_electric_monthly', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Monthly electric utility cost in dollars', max_digits=10)),
                ('utility_gas_monthly', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Monthly gas utility cost in dollars', max_digits=10)),
                ('utility_water_monthly', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Monthly water utility cost in dollars', max_digits=10)),
                ('utility_sewer_monthly', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Monthly sewer utility cost in dollars', max_digits=10)),
                ('utility_trash_monthly', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Monthly trash utility cost in dollars', max_digits=10)),
                ('utility_other_monthly', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Monthly other utility costs in dollars', max_digits=10)),
                ('property_management_monthly', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Monthly property management cost in dollars', max_digits=10)),
                ('repairs_maintenance_monthly', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Monthly repairs and maintenance cost in dollars', max_digits=10)),
                ('marketing_monthly', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Monthly marketing cost in dollars', max_digits=10)),
                ('trashout_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='One-time trashout cost in dollars', max_digits=10)),
                ('renovation_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='One-time renovation cost in dollars', max_digits=10)),
                ('security_cost_monthly', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Monthly security cost in dollars', max_digits=10)),
                ('landscaping_monthly', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Monthly landscaping cost in dollars', max_digits=10)),
                ('pool_maintenance_monthly', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Monthly pool maintenance cost in dollars', max_digits=10)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about these property type assumptions', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether these assumptions are currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Property Type Assumption',
                'verbose_name_plural': 'Property Type Assumptions',
                'db_table': 'property_type_assumptions',
                'ordering': ['property_type'],
                'indexes': [models.Index(fields=['property_type'], name='property_ty_propert_da546d_idx'), models.Index(fields=['is_active'], name='property_ty_is_acti_6ab36a_idx')],
            },
        ),
        migrations.CreateModel(
            name='SquareFootageAssumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_category', models.CharField(choices=[('RESIDENTIAL', 'Residential'), ('COMMERCIAL', 'Commercial')], help_text='Property category: Residential or Commercial', max_length=20)),
                ('description', models.CharField(help_text='Description of these square footage assumptions', max_length=200)),
                ('utility_electric_per_sqft', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), help_text='Electric cost per square foot per month', max_digits=8)),
                ('utility_gas_per_sqft', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), help_text='Gas cost per square foot per month', max_digits=8)),
                ('utility_water_per_sqft', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), help_text='Water cost per square foot per month', max_digits=8)),
                ('utility_sewer_per_sqft', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), help_text='Sewer cost per square foot per month', max_digits=8)),
                ('utility_trash_per_sqft', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), help_text='Trash cost per square foot per month', max_digits=8)),
                ('utility_other_per_sqft', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), help_text='Other utility cost per square foot per month', max_digits=8)),
                ('property_management_per_sqft', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), help_text='Property management cost per square foot per month', max_digits=8)),
                ('repairs_maintenance_per_sqft', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), help_text='Repairs and maintenance cost per square foot per month', max_digits=8)),
                ('marketing_per_sqft', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), help_text='Marketing cost per square foot per month', max_digits=8)),
                ('security_cost_per_sqft', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), help_text='Security cost per square foot per month', max_digits=8)),
                ('landscaping_per_sqft', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), help_text='Landscaping cost per square foot per month', max_digits=8)),
                ('pool_maintenance_per_sqft', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), help_text='Pool maintenance cost per square foot per month', max_digits=8)),
                ('trashout_per_sqft', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), help_text='Trashout cost per square foot (one-time)', max_digits=8)),
                ('renovation_per_sqft', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), help_text='Renovation cost per square foot (one-time)', max_digits=8)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about these square footage assumptions', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether these assumptions are currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Square Footage Assumption',
                'verbose_name_plural': 'Square Footage Assumptions',
                'db_table': 'square_footage_assumptions',
                'ordering': ['property_category', 'description'],
                'indexes': [models.Index(fields=['property_category'], name='square_foot_propert_69d47d_idx'), models.Index(fields=['is_active'], name='square_foot_is_acti_6501bc_idx')],
                'unique_together': {('property_category', 'description')},
            },
        ),
        migrations.CreateModel(
            name='UnitBasedAssumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('units_min', models.IntegerField(help_text='Minimum unit count for this range (inclusive)')),
                ('units_max', models.IntegerField(blank=True, help_text='Maximum unit count for this range (inclusive). Null = no maximum', null=True)),
                ('utility_electric_per_unit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Electric cost per unit per month', max_digits=10)),
                ('utility_gas_per_unit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Gas cost per unit per month', max_digits=10)),
                ('utility_water_per_unit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Water cost per unit per month', max_digits=10)),
                ('utility_sewer_per_unit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Sewer cost per unit per month', max_digits=10)),
                ('utility_trash_per_unit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Trash cost per unit per month', max_digits=10)),
                ('utility_other_per_unit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Other utility cost per unit per month', max_digits=10)),
                ('property_management_per_unit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Property management cost per unit per month', max_digits=10)),
                ('repairs_maintenance_per_unit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Repairs and maintenance cost per unit per month', max_digits=10)),
                ('marketing_per_unit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Marketing cost per unit per month', max_digits=10)),
                ('security_cost_per_unit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Security cost per unit per month', max_digits=10)),
                ('landscaping_per_unit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Landscaping cost per unit per month', max_digits=10)),
                ('pool_maintenance_per_unit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Pool maintenance cost per unit per month', max_digits=10)),
                ('trashout_per_unit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Trashout cost per unit (one-time)', max_digits=10)),
                ('renovation_per_unit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Renovation cost per unit (one-time)', max_digits=10)),
                ('description', models.CharField(help_text='Description of this unit count range', max_length=200)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about these unit-based assumptions', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether these assumptions are currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Unit Based Assumption',
                'verbose_name_plural': 'Unit Based Assumptions',
                'db_table': 'unit_based_assumptions',
                'ordering': ['units_min'],
                'indexes': [models.Index(fields=['units_min', 'units_max'], name='unit_based__units_m_ceb39f_idx'), models.Index(fields=['is_active'], name='unit_based__is_acti_5f199b_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('units_min__gte', 1)), name='units_min_positive'), models.CheckConstraint(condition=models.Q(('units_max__isnull', True), ('units_max__gte', models.F('units_min')), _connector='OR'), name='units_max_gte_min')],
            },
        ),
    ]
